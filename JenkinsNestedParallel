def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "devops_package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def artifactname = "devops_artifact_${env.BUILD_NUMBER}.jar"
def repoName = "Demo"

pipeline {
	agent any
	tools {
		maven 'Maven' 
	}
	environment {
		SCANNER_HOME = tool 'sonarScanner'
	}

	stages {
		stage('Build') {
			stages {
				stage("Build_Nested") {
					steps {
						echo "build 1.1 executed"
						sh 'mvn clean'
						sleep 10
						snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"main"}""")
						//snDevOpsArtifact artifactsPayload: '{"artifacts":[{"name": "sa-web.jar", "version": "1.9", "repositoryName": "services-1031"}, {"name": "sa-db.jar", "version": "1.3.2", "repositoryName": "services-1032"}], "branchName": "master"}', configurationName: 'DevOps-wp1dcvpi9bugbashsc.service-now.com-1710405303027'
				          sleep 5
					  	snDevOpsPackage(name: "${packageName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"main"}""")
						//snDevOpsPackage artifactsPayload: '{"artifacts":[{"name": "sa-web.jar", "version": "1.9", "repositoryName": "services-1031"}, {"name": "sa-db.jar", "version": "1.3.2", "repositoryName": "services-1032"}], "branchName": "master"}', configurationName: 'DevOps-wp1dcvpi9bugbashsc.service-now.com-1710405303027', name: 'packageName'
						sleep 20
						//snDevOpsSecurityResult securityResultAttributes: '{"scanner": "Veracode","applicationName": "10kflaws-72"}'
						//snDevOpsSecurityResult configurationName: 'DevOps-wp1dcvpi9bugbashsc.service-now.com-1710405303027', securityResultAttributes: '{"scanner": "Veracode", "applicationName": "PetStoreAPI-Github", "buildVersion": "", "securityToolId": ""}'
						sonarSummaries()
						//snDevOpsChange()
						
					}
				} // end of build 1.1
			} // end of stages
		} // end of build1

		stage('Test') {
			parallel {
				stage('parallelTest1') {
					// Nested stage inside parallel
					stages {
						stage("nested_inside_parallel") {
							steps {
							       // sleep 30
								echo 'nested_inside_parallel'
								 sh 'mvn test -Dpublish'
								 //sh 'mvn test -Dpublish'
								sleep 5
								junit "**/target/surefire-reports/*.xml"
							        snDevOpsSecurityResult securityResultAttributes: '{"scanner": "Veracode","applicationName": "10kflaws-72"}'
								sleep 15
							}
							post {
								success {
									echo 'Test1-success'
									junit "**/target/surefire-reports/*.xml"
								}
							}
						}
						stage("Deploy1") {
							steps {
								echo 'CR1'
								sleep 10
								//snDevOpsArtifact artifactsPayload: '{"artifacts":[{"name": "sa-web.jar", "version": "1.9", "repositoryName": "services-1031"}, {"name": "sa-db.jar", "version": "1.3.2", "repositoryName": "services-1032"}], "branchName": "master"}'
							        snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"main"}""")
								//snDevOpsSecurityResult securityResultAttributes: '{"scanner": "Veracode","applicationName": "PetStoreAPI-Github"}'
								//snDevOpsSecurityResult configurationName: 'DevOps-wp1dcvpi9bugbashsc.service-now.com-1710405303027', securityResultAttributes: '{"scanner": "Veracode", "applicationName": "PetStoreAPI-Github", "buildVersion": "", "securityToolId": ""}'
								snDevOpsChange(changeRequestDetails: """
								  {
								    "setCloseCode": false,
								         "attributes": {
								            "requested_by": {
								                "name": "DevOps System"
								             },
								            "category": "DevOps",
								            "priority": "2",
								            "comments": "This is a sample pipeline script to be added in your change step",
								            "work_notes": "Update this to work_notes",
								            "start_date": "2022-01-05 11:59:59",
								            "end_date": "2022-01-08 11:59:59"
								      }
								}""")
								snDevOpsChange changeCreationTimeOut: 3600, changeRequestDetails: """{
								   "attributes": {
									    "short_description": "Test description",
									    "priority": "1",
									    "start_date": "2021-02-05 08:00:00",
									    "end_date": "2022-04-05 08:00:00",
									    "justification": "test justification",
									    "description": "test description",
									    "cab_required": true,
									    "comments": "This update for work notes is from jenkins file",
									    "work_notes": "test work notes",
									    "assignment_group": "a715cd759f2002002920bde8132e7018"
								  },
								  "setCloseCode": false,
								  "autoCloseChange": true
								}""", changeStepTimeOut: 18000, pollingInterval: 60
							}							
						}

					} // end of stages
				} // end of parallelTest1
				stage('parallelTest2') {
					stages {
						stage("nested_inside_parallel2") {
							steps{
								sonarSummaries()
							}

						}

						stage("nested_inside_parallel3") {
							steps {
								sleep 20
								sh 'mvn test -Dpublish'
								echo 'Test2 in progress'
								sleep 5
								//junit "**/target/surefire-reports/*.xml"
								sleep 15
								//sonarSummaries()
							         // snDevOpsChange()
								
							}
							post {
								success {
									echo 'Test2-success'
									junit "**/target/surefire-reports/*.xml"
								}
							}
						}
						stage("Deploy2") {
							steps {
								echo 'CR2'
								sleep 10
								snDevOpsChange changeRequestDetails: '{ "attributes": {"chg_model": "007c4001c343101035ae3f52c1d3aeb2"}}'
							}
						}
	
	

					} //end of 		 
				} // end of parallelTest2

			} // end of parallel
		} // end of Test

	} // end of stages
	

} // end of pipeline
def sonarSummaries() {
	withSonarQubeEnv('sonarcloud.io'){
	   if(fileExists("sonar-project.properties")) {
			sh '${SCANNER_HOME}/bin/sonar-scanner'
		} else {
			sh 'mvn clean verify sonar:sonar \
			    -Dsonar.login=8c5fe0915a1e4b00995edc284975b4f6d568a5c9 \
			    -Dsonar.host.url=https://sonarcloud.io \
			    -Dsonar.organization=riyapulusuganti05 \
			    -Dsonar.projectKey=riyapulusuganti05_Drepo'
		}

	//timeout(time: 1, unit: 'MINUTES') {
		//waitForQualityGate abortPipeline: false
	//}
}

}
